generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model futures {
  MARKET              String?   @db.VarChar(32)
  PRODUCT_SYMBOL      String?   @map("PRODUCT SYMBOL") @db.VarChar(8)
  CONTRACT_MONTH      String?   @map("CONTRACT MONTH") @db.VarChar(2)
  CONTRACT_YEAR       String?   @map("CONTRACT YEAR") @db.VarChar(4)
  CONTRACT_DAY        String?   @map("CONTRACT DAY") @db.VarChar(2)
  CONTRACT            String?   @db.VarChar(64)
  PRODUCT_DESCRIPTION String?   @map("PRODUCT DESCRIPTION") @db.VarChar(128)
  OPEN                Float?
  HIGH                Float?
  HIGH_AB_INDICATOR   String?   @map("HIGH AB INDICATOR") @db.VarChar(1)
  LOW                 Float?
  LOW_AB_INDICATOR    String?   @map("LOW AB INDICATOR") @db.VarChar(1)
  LAST                Float?
  LAST_AB_INDICATOR   String?   @map("LAST AB INDICATOR") @db.VarChar(1)
  SETTLE              Float?
  PT_CHG              String?   @map("PT CHG") @db.VarChar(16)
  EST__VOL            Float?    @map("EST. VOL")
  PRIOR_SETTLE        Float?    @map("PRIOR SETTLE")
  PRIOR_VOL           Float?    @map("PRIOR VOL")
  PRIOR_INT           Float?    @map("PRIOR INT")
  TRADEDATE           DateTime? @db.Date

  @@ignore
}

model trade {
  trade_id                    String    @id(map: "PK__trade__AAFF5BF717D4A4F8") @db.VarChar(36)
  created_by                  String    @db.VarChar(36)
  created_at                  DateTime  @default(now(), map: "DF__trade__created_a__6754599E") @db.DateTime
  updated_by                  String    @db.VarChar(36)
  updated_at                  DateTime  @default(now(), map: "DF__trade__updated_a__693CA210") @db.DateTime
  active                      Boolean   @default(true, map: "DF__trade__active__6A30C649")
  trade_date                  DateTime  @db.Date
  trade_type                  String    @db.VarChar(16)
  market                      String    @db.VarChar(16)
  commodity                   String    @db.VarChar(16)
  contract_name               String    @db.VarChar(16)
  settlement_type             String    @db.VarChar(16)
  settlement_market           String    @db.VarChar(16)
  trader_name                 String    @db.VarChar(32)
  counter_party               String?   @db.VarChar(16)
  other_counter_party         String?   @db.VarChar(16)
  settlement_point            String    @db.VarChar(16)
  settlement_location         String    @db.VarChar(16)
  book                        String?   @db.VarChar(32)
  transaction                 String    @db.VarChar(16)
  delivery_start              DateTime? @db.Date
  delivery_end                DateTime? @db.Date
  expiration                  DateTime? @db.Date
  volume                      Float
  price                       Float
  fee                         Float
  strike                      Float
  user                        user      @relation(fields: [created_by], references: [user_id], onUpdate: NoAction, map: "FK__trade__created_b__66603565")
  user_trade_updated_byTouser user      @relation("trade_updated_byTouser", fields: [updated_by], references: [user_id], onUpdate: NoAction, map: "FK__trade__updated_b__68487DD7")
}

model user {
  user_id                      String  @id(map: "PK__user__B9BE370F1F138D5A") @db.VarChar(36)
  email                        String  @unique(map: "AK__email") @db.VarChar(64)
  password_hash                String  @db.VarChar(64)
  role                         String  @db.VarChar(16)
  first_name                   String  @db.VarChar(64)
  last_name                    String? @db.VarChar(64)
  trade                        trade[]
  trade_trade_updated_byTouser trade[] @relation("trade_updated_byTouser")
}
